P -> PRINCIPAL FUNCIONES SECCION_VARIABLES

PRINCIPAL -> {<main>} BLOQUE

BLOQUE -> {ESTATUTOS}

FUNCIONES -> def identificador (:PARAMETROS:) BLOQUE RETURN FUNCIONES'
FUNCIONES' -> FUNCIONES
FUNCIONES -> nulo
PARAMETROS -> TIPO identificador PARAMETROS_PRIMA
PARAMETROS -> nulo
PARAMETROS_PRIMA -> , PARAMETROS
PARAMETROS_PRIMA -> nulo
RETURN -> return LISTA_VARIABLES
RETURN -> nulo
TIPO -> numerical
TIPO -> dec
TIPO -> string
TIPO -> logic
TIPO -> list

SECCION_VARIABLES -> {:vars : DECLARACION_VARIABLES}
DECLARACION_VARIABLES -> LISTA_VARIABLES : TIPO DECLARACION_VARIABLE_PRIMA
DECLARACION_VARIABLE_PRIMA -> DECLARACION_VARIABLES
DECLARACION_VARIABLE_PRIMA -> nulo
LISTA_VARIABLES -> identificador LISTA_VARIABLES_PRIMA
LISTA_VARIABLES_PRIMA -> , LISTA_VARIABLES
LISTA_VARIABLES -> nulo

ESTATUTOS -> ESTATUTO ESTATUTOS
ESTATUTOS -> nulo
ESTATUTO -> ESTATUTO_CYCLEWHILE
ESTATUTO -> ESTATUTO_CYCLEFOR
ESTATUTO -> ESTATUTO_CYCLEREPEAT
ESTATUTO -> ASIGNACION
ESTATUTO -> ESTATUTO_CYCLEDO
ESTATUTO -> FUNCION_BUILT_IN
ASIGNACION -> identificador ASIGNACION_PRIMA
ASIGNACION_PRIMA -> :=:: EXP
ASIGNACION_PRIMA -> <-[[ELEMENTOS_LISTA]]

FUNCION_BUILT_IN -> longitud(identificador)
FUNCION_BUILT_IN -> esnumero(identificador)
FUNCION_BUILT_IN -> esdecimal(identificador)
FUNCION_BUILT_IN -> decimal(identificador)
FUNCION_BUILT_IN -> lectura()
FUNCION_BUILT_IN -> absoluto(EXP)
FUNCION_BUILT_IN -> cadena(EXP)
FUNCION_BUILT_IN -> potencia(EXP)
FUNCION_BUILT_IN -> redondear(EXP)
FUNCION_BUILT_IN -> sumando(identificador)
FUNCION_BUILT_IN -> minimo(identificador)
FUNCION_BUILT_IN -> maximo(identificador)

LISTA_ELEMENTO -> numero LISTA_ELEMENTO_PRIMA
LISTA_ELEMENTO_PRIMA -> , LISTA_ELEMENTO
LISTA_ELEMENTO_PRIMA -> nulo

IMPRESION -> numero IMPRESION_PRIMA
IMPRESION -> texto IMPRESION_PRIMA
IMPRESION_PRIMA -> , IMPRESION
IMPRESION_PRIMA -> nulo

ESTATUTO_IF -> ifwhether CONDICION BLOQUE ELIF
CONDICION -> in RANGE
CONDICION -> EXPB
CONDICION -> true

ESTATUTO_CYCLEREPEAT -> repeat BLOQUE CONDICION
ESTATUTO_CYCLEDO -> do BLOQUE CONDICION
ELIF -> elif EXP_EXPRESION BLOQUE ELIF
ELIF -> else BLOQUE
ELIF -> nulo
RANGE -> range(START, STOP, STEP)
START -> numero
START -> nulo
STOP -> numero
STEP -> numero
STEP -> nulo

EXPB -> TERMB EXPB'
EXPB' -> && TERMB EXPB'
EXPB' -> || TERMB EXPB'
EXPB' -> nulo
TERMB -> OPER EXP TERMB'
TERMB' -> OPER EXP TERMB'
TERMB -> nulo
EXP -> TERMB EXP'
EXP' ->  + TERMP EXP'
EXP' ->  - TERMP EXP'
EXP' -> nulo
TERM -> FACTOR TERM'
TERM' -> * FACTOR TERM'
TERM' -> / FACTOR TERM'
TERM' -> nulo
FACTOR -> identificador FUNCT
FACTOR -> (EXPB)
FUNCT -> (PARAMETROS)
FUNCT -> nulo
OPER -> >!!>
OPER -> <!!>
OPER -> >>!!=
OPER -> <<!!=
OPER -> =!!=